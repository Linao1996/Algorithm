class Solution {
public:
   vector<vector<int>> permute(vector<int> &nums) {
        sort(nums.begin(), nums.end());
        vector<vector<int>> res;
        res.push_back(nums);
        while (nextPermutation(nums)) {
            res.push_back(nums);
        }
        return res;
    }

    bool nextPermutation(vector<int> &nums) {
        int k = -1;
        int l = -1;
        for (int i = nums.size() - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                k = i;
                break;//!!!
            }
        }
        if (k == -1) {
            reverse(nums.begin(), nums.end());
            return false;//!!!
        } else {
            for (int i = nums.size() - 1; i > k; i--) {
                if (nums[i] > nums[k]) {
                    l = i;
                    break;
                }
            }
        }
        int tmp = nums[k];
        nums[k] = nums[l];
        nums[l] = tmp;
        reverse(nums.begin() + k + 1, nums.end());
        return true;
    }
};
