class Solution {
public:
    bool isSubtree(TreeNode *s, TreeNode *t) {
        if (!t)return true;
        if (!s)return false;
        if (equalTree(s, t))return true;
        bool b1 = isSubtree(s->left, t);
        bool b2 = isSubtree(s->right, t);
        return b1 || b2;
    }

    bool equalTree(TreeNode *s, TreeNode *t) {
        if (!s && !t)return true;
        if (!s || !t)return false;
        if (s->val != t->val)return false;
        bool b1 = equalTree(s->left, t->left);
        bool b2 = equalTree(s->right, t->right);
        return b1 && b2;
    }
};
