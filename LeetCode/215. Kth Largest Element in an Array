class Solution {
public:
    int findKthLargest(vector<int> &nums, int k) {
        int key = nums.size() - k;
        int low = 0;
        int high = nums.size() - 1;
        while (low < high) {
            int pos = partition(nums, low, high);
            if (pos > key) {
                high = pos - 1;
            } else if (pos < key) {
                low = pos + 1;
            } else {
                break;
            }
        }
        return nums[key];
    }

    int partition(vector<int> &nums, int low, int high) {
        int i = low;
        int j = high + 1;
        while (true) {
            while (i < high && nums[++i] < nums[low]);
            while (j > low && nums[--j] > nums[low]);
            if (i >= j) {
                break;
            }
            swap(nums[i], nums[j]);
        }
        swap(nums[low], nums[j]);
        return j;
    }
};
