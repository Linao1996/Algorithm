#include <stdio.h>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <stack>

#define INFINITE 999999999
using namespace std;

stack<int> S1;
stack<int> S2;
vector<int> vec(10010, 0);

int main() {
    string line;
    while (getline(cin, line)) {
        while (!S1.empty()) {
            S1.pop();
        }
        while (!S2.empty()) {
            S2.pop();
        }
        int before = 0, after = 0;
        if (line == "#")return 0;
        int count = 0;
        for (int i = 0; i < line.size(); i++) {
            if (line[i] == 'd')count++;
            else count--;
            if (count > before) before = count;
        }
        S1.push(0);
        S2.push(0);
        int flag = 0;
        for (int i = 0; i < line.size(); i++) {
            if (line[i] == 'd') {
                if (!flag) {
                    vec[i + 1] = vec[S1.top()] + 1;
                    after = max(after, vec[i + 1]);
                    S1.push(i + 1);
                    S2.push(i + 1);
                } else {
                    vec[i + 1] = vec[S2.top()] + 1;
                    after = max(after, vec[i + 1]);
                    S1.push(i + 1);
                    S2.push(i + 1);
                    flag = 0;
                }
            }
            if (line[i] == 'u') {
                S2.pop();
                flag = 0;
            }
            if (line[i] == 'u' && line[i - 1] == 'u') {
                S1.pop();
                flag = 1;
            }
        }
        printf("%d => %d\n", before, after);
    }
}
