#include <stdio.h>
#include <algorithm>
#include <math.h>
#include <vector>

using namespace std;

void helper(vector<vector<int>> myth, int &x, int &y, int len, int orient) {
    if (orient == 0) {// horizontal
        for (int i = 0; i < len; i++) {
            printf("%d\n", myth[x][y + i]);
        }
        y = y + len - 1;
        x += 1;
    }
    if (orient == 1) {//vertical
        for (int i = 0; i < len; i++) {
            printf("%d\n", myth[x + i][y]);
        }
        x = x + len - 1;
        y -= 1;
    }
    if (orient == 2) {
        for (int i = 0; i < len; i++) {
            printf("%d\n", myth[x][y - i]);
        }
        y = y - len + 1;
        x -= 1;
    }
    if (orient == 3) {
        for (int i = 0; i < len; i++) {
            printf("%d\n", myth[x - i][y]);
        }
        x = x - len + 1;
        y += 1;
    }
}

int main() {
    int row, col;
    vector<vector<int>> myth(100, vector<int>(100, 0));
    scanf("%d%d", &row, &col);
    int xlen = col;
    int ylen = row;
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            scanf("%d", &myth[i][j]);
        }
    }
    int x = 0, y = 0;
    while (xlen >= 0 && ylen >= 0) {
        for (int i = 0; i < 4; i++) {
            if (i % 2 == 0) {
                helper(myth, x, y, xlen, i);
                if (--ylen == 0) {
                    return 0;
                }
            } else {
                helper(myth, x, y, ylen, i);
                if (--xlen == 0) {
                    return 0;
                }
            }
        }
    }
}
